# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: MasterCI

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: DEV
        required: true
jobs:
  build:

    runs-on: ubuntu-latest
    name: Master CI
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file springboot/pom.xml
      
    - name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
      uses: actions/upload-artifact@v2
      with:
        #Set artifact name
        name: artifact
        #From this path
        path: springboot/target/openapi-spring-1.22.1.jar  
      
#Deploy's job
  deploy:
    #Depends on build's job
    needs: build
    name: CD
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR
        #Download the artifact which was uploaded in the build's job
        uses: actions/download-artifact@v2
        with:
          name: artifact
      #Deploy the artifact (JAR) into AWS Beanstalk
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          use_existing_version_if_available: false
          application_name: springboot-deploy
          environment_name: Springbootdeploy-env
          version_label: ${{github.SHA}}
          region: us-east-1
